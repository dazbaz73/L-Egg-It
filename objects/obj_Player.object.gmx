<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PlayerStandRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial Variables

/*
Creating these variables just make it
easier to find the right image_speed quicker.
*/ 
standAnimSpeed = .2;
walkAnimSpeed = .5;
ceilingHangAnimSpeed = .3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause System

if(isPaused || roomSwitch) // If the game is PAUSED, or Character is SWITCHING ROOMS
{
    image_speed = 0; // Stop animation from playing
    exit; // Stop any scripts from being run
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation

switch(state) // Switch the characters animation based on the Players "state"
{
    case "StandRight": // If the player is standing Facing Right
    sprite_index = spr_PlayerStandRight; // Set characters animation accordingly
    image_speed = standAnimSpeed; // Sets animation speed to user variables
    break;
    
    case "StandLeft": // If the player is standing Facing Left
    sprite_index = spr_PlayerStandLeft; // Set characters animation accordingly
    image_speed = standAnimSpeed; // Sets animation speed to user variables
    break;
    
    case "WalkRight": // If the player is Walking to the Right
    sprite_index = spr_PlayerWalkRight; // Set characters animation accordingly
    image_speed = walkAnimSpeed; // Sets animation speed to user variables
    break;
    
    case "WalkLeft": // If the player is Walking to the Left
    sprite_index = spr_PlayerWalkLeft; // Set characters animation accordingly
    image_speed = walkAnimSpeed; // Sets animation speed to user variables
    break;
    
    case "JumpRight": // If the player is Jumping Right
    sprite_index = spr_PlayerJumpRight; // Set characters animation accordingly
    break;
    
    case "JumpLeft": // If the player is Jumping Left
    sprite_index = spr_PlayerJumpLeft; // Set characters animation accordingly
    break;
    
    case "FallRight": // If the player is Falling Right
    sprite_index = spr_PlayerFallRight; // Set characters animation accordingly
    break;
    
    case "FallLeft": // If the player is Falling Left
    sprite_index = spr_PlayerFallLeft; // Set characters animation accordingly
    break;
    
    case "DuckRight": // If the player is Ducking Right
    sprite_index = spr_PlayerDuckRight; // Set characters animation accordingly
    break;
    
    case "DuckLeft": // If the player is Ducking Left
    sprite_index = spr_PlayerDuckLeft; // Set characters animation accordingly
    break;
    
    case "CeilingHangRight": // If the player is Hanging facing Right
    sprite_index = spr_PlayerHangRight; // Set characters animation accordingly
    break;
    
    case "CeilingHangLeft": // If the player is Hanging facing Left
    sprite_index = spr_PlayerHangLeft; // Set characters animation accordingly
    break;
    
    case "CeilingHangMoveRight": // If the player is Hanging moving Right
    sprite_index = spr_PlayerCeilingHangMoveRight; // Set characters animation accordingly
    image_speed = ceilingHangAnimSpeed; // Sets animation speed to user variables
    break;
    
    case "CeilingHangMoveLeft": // If the player is Hanging moving Left
    sprite_index = spr_PlayerCeilingHangMoveLeft; // Set characters animation accordingly
    image_speed = ceilingHangAnimSpeed; // Sets animation speed to user variables
    break;
    
    case "WallslideRight": // If the player is Wall Sliding Right
    sprite_index = spr_PlayerWallslideRight; // Set characters animation accordingly
    part = instance_create(x+irandom_range(6,10), y, obj_Particle); // Creates a "Particle"
    part.image_xscale = random_range(.5,1.5); // Scales particle randomly
    part.image_yscale = part.image_xscale; // Set y scale to equal x scale(Even scaling)
    part.dir = "North"; // Sets particle direction 
    break;
    
    case "WallslideLeft": // If the player is Wall Sliding Left
    sprite_index = spr_PlayerWallslideLeft; // Set characters animation accordingly
    part = instance_create(x-irandom_range(6,10), y, obj_Particle); // Creates a "Particle"
    part.image_xscale = random_range(.5,1.5); // Scales particle randomly
    part.image_yscale = part.image_xscale; // Set y scale to equal x scale(Even scaling)
    part.dir = "North"; // Sets particle direction 
    break;
    
    case "WallslideJumpRight": // If the player is Wall Jumping Right
    sprite_index = spr_PlayerJumpRight; // Set characters animation accordingly
    break;
    
    case "WallslideJumpLeft": // If the player is Wall Jumping Left
    sprite_index = spr_PlayerJumpLeft; // Set characters animation accordingly
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

// Draw PAUSED on screen
if(isPaused) // If the game is PAUSED
{
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_text(view_xview[0]+view_wport[0]/4, view_yview[0]+view_hport[0]/4, "PAUSED");
}

/*
draw_set_font(ft_DEBUG);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_color(c_white);
draw_set_alpha(1);

draw_text(x,y-64,string(state));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
